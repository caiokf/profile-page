{"version":3,"sources":["styleguide/colors.js","styleguide/dimensions.js","styleguide/typography.js","styleguide/media.js","styleguide/index.js","components/Header.js","components/Profiles.js","utils/dates.js","components/Education.js","components/WorkExperience.js","components/CareerOverview.js","App.js","styleguide/global.js","serviceWorker.js","index.js"],"names":["white","platinum","metalGray","black","usafaBlue","carrotOrange","darkCyan","xl","lg","md","sm","xs","maxWidth","regular","colors","jumbo","header","dimensions","label","small","sizes","queries","large","typography","media","css","console","log","resume","className","Avatar","photo","basics","picture","Name","name","Headline","summary","Header","styled","styles","div","props","Container","profiles","map","x","Profile","href","url","target","Icon","src","icon","color","iconColor","Network","username","a","img","year","date","slice","education","studyType","area","Instituition","institution","startDate","endDate","work","sort","b","Experience","Title","Position","position","website","Company","company","CompanyText","via","When","duration","Summary","Highlights","highlights","h","Technologies","TechLabel","TechStack","technologies","span","ExperienceSection","career","reverse","CareerItem","size","Bullet","CareerDate","CareerDescription","description","ProfileContainer","Body","Main","RightSidebar","createGlobalStyle","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","CareerOverview","Education","Profiles","WorkExperience","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6d87241.chunk.js","sourcesContent":["export default {\n  // grayscale\n  white: '#ffffff',\n  platinum: '#e5e5e5',\n  metalGray: '#5E747F',\n  black: '#000000',\n\n  // colors and accents\n  usafaBlue: '#00558B',\n  carrotOrange: '#F09B1A',\n  darkCyan: '#008895',\n}\n","export default {\n  xl: '80px',\n  lg: '40px',\n  md: '20px',\n  sm: '10px',\n  xs: '5px',\n\n  maxWidth: '1024px',\n}\n","import colors from './colors'\nimport dimensions from './dimensions'\n\nconst regular = `\n  font-family: 'Montserrat', sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${colors.black};\n`\nexport default {\n  jumbo: regular + `\n    font-size: 36px;\n    line-height: 60px;\n    font-weight: 700;\n    color: ${colors.usafaBlue};\n  `,\n\n  header: regular + `\n    font-size: 22px;\n    line-height: 24px;\n    font-weight: 600;\n    color: ${colors.usafaBlue};\n    text-transform: uppercase;\n    padding-bottom: ${dimensions.sm};\n    margin-bottom: ${dimensions.sm};\n  `,\n\n  regular,\n\n  label: regular + `\n    font-size: 14px;\n    opacity: .8;\n    line-height: 18px;\n    font-weight: 400;\n    color: ${colors.metalGray};\n  `,\n\n  small: regular + `\n    font-size: 14px;\n    line-height: 18px;\n    margin: 5px 0px;\n    font-weight: 400;\n  `,\n}\n","import { css } from 'styled-components'\n\nconst sizes = {\n  small: 1023,\n}\n\nconst queries = {\n  small: `(max-width: ${sizes.small}px)`,\n  large: `(min-width: ${sizes.small + 1}px)`,\n}\n\n// Iterate through the sizes and create a media template\nconst media = {\n  small: (...args) => css`\n    @media ${queries.small} {\n      ${css(...args)}\n    }\n  `,\n  large: (...args) => css`\n    @media ${queries.large} {\n      ${css(...args)}\n    }\n  `,\n}\n\nexport default media\n","import colors from './colors'\nimport dimensions from './dimensions'\nimport typography from './typography'\nimport media from './media'\n\nexport default {\n  colors,\n  typography,\n  dimensions,\n  media,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  console.log(resume)\n\n  return (\n    <Header className=\"profile-bio\">\n      <div>\n        <Avatar photo={resume.basics.picture} />\n      </div>\n\n      <div>\n        <Name className=\"name\">{resume.basics.name}</Name>\n        <Headline className=\"headline\">{resume.basics.label}</Headline>\n        <div className=\"summary\">{resume.basics.summary}</div>\n      </div>\n    </Header>\n  )\n}\n\nconst Header = styled.header`\n  display: flex;\n  padding-bottom: ${styles.dimensions.lg};\n  border-bottom: 1px solid ${styles.colors.platinum};\n  margin-bottom: ${styles.dimensions.lg};\n\n  ${styles.media.small`\n    flex-direction: column;\n    align-items: center;\n    text-align: left;\n  `}\n`\nconst Avatar = styled.div`\n  background-image: url(${props => props.photo});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  width: 200px;\n  margin-right: ${styles.dimensions.md};\n  border-radius: 5px;\n\n  ${styles.media.small`\n    margin-bottom: ${styles.dimensions.md};\n  `}\n`\nconst Name = styled.div`\n  ${styles.typography.jumbo};\n`\nconst Headline = styled.div`\n  ${styles.typography.label};\n  margin-bottom: ${styles.dimensions.md};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  return (\n    <Container className=\"profile-links\">\n      <Header>Find me Online</Header>\n\n      {resume.basics.profiles.map(x => {\n        return (\n          <Profile href={x.url} target=\"_blank\">\n            <Icon src={x.icon} color={x.iconColor} />\n            <Network>{x.username}</Network>\n          </Profile>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.header`\n  display: flex;\n  flex-direction: column;\n  margin: 0 {styles.dimensions.md};\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst Profile = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  ${styles.typography.regular};\n\n  &:visited {\n    ${styles.typography.regular};\n  }\n`\nconst Icon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin: ${styles.dimensions.xs} ${styles.dimensions.sm} ${styles.dimensions.xs} 0;\n`\nconst Network = styled.div`\n  ${styles.typography.small};\n`\n","export const year = (date) => date.slice(0, 4)\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\nimport { year } from '../utils/dates'\n\nexport default () => {\n  return (\n    <Container className=\"education-container\">\n      {resume.education.map(x => {\n        return (\n          <div>\n            <Header>Education</Header>\n\n            <div className=\"education-degree\">\n              {x.studyType} in {x.area}\n            </div>\n\n            <Instituition className=\"education-institution\">\n              @ {x.institution} ({year(x.startDate)} - {year(x.endDate)})\n            </Instituition>\n          </div>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  margin-bottom: ${styles.dimensions.lg};\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst Instituition = styled.div`\n  ${styles.typography.label};\n  margin-top: ${styles.dimensions.sm};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\nimport { year } from '../utils/dates'\n\nconst work = () => resume.work.sort((a, b) => a.endDate > b.endDate ? -1 : 1)\n\nexport default () => {\n  return (\n    <Container className=\"work-container\">\n      <Header>Work Experience</Header>\n\n      {work().map(x => {\n        return (\n          <Experience>\n            <Title>\n              <Position className=\"work-position\">{x.position}</Position>\n              {x.website\n                ? <Company href={x.website} target=\"_blank\" className=\"work-company\">@ {x.company}</Company>\n                : <CompanyText className=\"work-company-text\">@ {x.company}</CompanyText>\n              }\n              {x.via && <span> (via {x.via})</span>}\n              <When>{year(x.startDate)} - {year(x.endDate)} ({x.duration})</When>\n            </Title>\n\n            <Summary>{x.summary}</Summary>\n\n            <Highlights>\n              {x.highlights && x.highlights.map(h => {\n                return (\n                  <div>- {h}</div>\n                )\n              })}\n            </Highlights>\n            <Technologies>\n              <TechLabel>Technologies: </TechLabel>\n              <TechStack>{x.technologies}</TechStack>\n            </Technologies>\n          </Experience>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  margin-top: ${styles.dimensions.lg};\n\n  ${styles.media.large`\n    margin-right: ${styles.dimensions.lg};\n  `}\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst Experience = styled.div`\n  padding: ${styles.dimensions.md};\n  border: 1px solid ${styles.colors.platinum};\n  margin-bottom: ${styles.dimensions.md};\n  position: relative;\n`\nconst Title = styled.div`\n  ${styles.media.small`\n    display: flex;\n    flex-direction: column;\n  `}\n`\nconst Position = styled.span`\n  font-weight: 700;\n`\nconst Company = styled.a`\n  ${styles.media.large`\n    margin-left: ${styles.dimensions.xs};\n  `}\n`\nconst CompanyText = styled.span`\n  ${styles.media.large`\n    margin-left: ${styles.dimensions.xs};\n  `}\n`\nconst ExperienceSection = styled.div`\n  margin-left: ${styles.dimensions.sm};\n  margin-bottom: ${styles.dimensions.sm};\n  ${styles.typography.label};\n`\nconst Summary = styled(ExperienceSection)`\n  margin-top: ${styles.dimensions.sm};\n  text-align: justify;\n`\nconst Highlights = styled(ExperienceSection)``\nconst Technologies = styled(ExperienceSection)`\n  margin-bottom: 0;\n`\nconst TechLabel = styled.span`\n  color: ${styles.colors.metalGray};\n  font-weight: 500;\n`\nconst When = styled.span`\n  color: ${styles.colors.carrotOrange};\n  font-weight: 500;\n\n  ${styles.media.large`\n    position: absolute;\n    right: ${styles.dimensions.md};\n  `}\n`\nconst TechStack = styled.span``\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  return (\n    <Container className=\"career-container\">\n      <Header>Career Overview</Header>\n\n      {resume.career.reverse().map(x => {\n        return (\n          <CareerItem size={x.size}>\n            <Bullet />\n            <CareerDate>{x.date}</CareerDate>\n            <CareerDescription>{x.description}</CareerDescription>\n          </CareerItem>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n\n  ${styles.media.small`\n    margin-bottom: ${styles.dimensions.lg};\n  `}\n\n  ${styles.media.large`\n    margin-right: ${styles.dimensions.lg};\n  `}\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst CareerItem = styled.div`\n  padding: ${styles.dimensions.md};\n  border-left: 10px solid ${styles.colors.platinum};\n  display: flex;\n  position: relative;\n  flex: ${props => props.size};\n`\nconst Bullet = styled.div`\n  background-color: white;\n  width: 16px;\n  height: 16px;\n  position: absolute;\n  left: -18px;\n  top: 17px;\n  border: 5px solid ${styles.colors.usafaBlue};\n  border-radius: 50%;\n`\nconst CareerDate = styled.div`\n  flex: 2;\n  font-weight: 700;\n  margin-right: ${styles.dimensions.md};\n`\nconst CareerDescription = styled.div`\n  flex: 7;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from './styleguide'\nimport Header from './components/Header'\nimport Profiles from './components/Profiles'\nimport Education from './components/Education'\nimport WorkExperience from './components/WorkExperience'\nimport CareerOverview from './components/CareerOverview'\n\nexport default () => {\n  return (\n    <Profile className=\"profile\">\n      <ProfileContainer className=\"profile-container\">\n        <Header />\n        <Body className=\"body\">\n          <Main className=\"career-and-profile-links\">\n            <CareerOverview />\n\n            <RightSidebar className=\"right-sidebar\">\n              <Education />\n              <Profiles />\n            </RightSidebar>\n          </Main>\n\n          <WorkExperience />\n        </Body>\n      </ProfileContainer>\n    </Profile>\n  )\n}\n\nconst Profile = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`\nconst ProfileContainer = styled.div`\n  width: ${styles.dimensions.maxWidth};\n  padding: ${styles.dimensions.lg} ${styles.dimensions.md};\n  display: flex;\n  flex-direction: column;\n\n  ${styles.media.small`\n    width: 100%;\n    box-sizing: border-box;\n  `}\n`\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst Main = styled.div`\n  display: flex;\n\n  ${styles.media.small`\n    flex-direction: column;\n  `}\n`\nconst RightSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n","import { createGlobalStyle } from 'styled-components'\nimport typography from './typography'\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    ${typography.regular};\n  }\n\n  a {\n    text-decoration: none;\n\n    ${typography.regular};\n\n    &:visited {\n      ${typography.regular};\n    }\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport GlobalStyles from './styleguide/global'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyles />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}